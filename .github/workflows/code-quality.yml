name: Code Quality Checks

# Trigger the workflow on push to main/master and on pull requests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  code-quality:
    name: Code Quality & Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup Node.js environment
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    # Install dependencies
    - name: Install dependencies
      run: yarn install --frozen-lockfile

    # Run ESLint checks
    - name: Run ESLint
      run: yarn lint

    # Run Prettier format check
    - name: Check code formatting
      run: yarn format:check

    # Run tests
    - name: Run tests
      run: yarn test --coverage --watchAll=false

    # Build the project to ensure it compiles
    - name: Build project
      run: yarn build

    # Upload test coverage to GitHub
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # Separate job for security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Run security audit
      run: yarn audit --level moderate

  # Job to check for unused dependencies
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    # Install depcheck to find unused dependencies
    - name: Install depcheck
      run: yarn global add depcheck
      
    - name: Check for unused dependencies
      run: depcheck --ignores="@testing-library/*,web-vitals,react-scripts"